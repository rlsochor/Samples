//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataWriterTestDriver.DataWriterSoapSvc_JSON {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JSONData", Namespace="http://schemas.datacontract.org/2004/07/DataWriter.SoapServices")]
    [System.SerializableAttribute()]
    public partial class JSONData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeSentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeSent {
            get {
                return this.TimeSentField;
            }
            set {
                if ((this.TimeSentField.Equals(value) != true)) {
                    this.TimeSentField = value;
                    this.RaisePropertyChanged("TimeSent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataWriterSoapSvc_JSON.IDataWriterJSONSoapSvc")]
    public interface IDataWriterJSONSoapSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataWriterSoapSvcOf_JSONData/Ping", ReplyAction="http://tempuri.org/IDataWriterSoapSvcOf_JSONData/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataWriterSoapSvcOf_JSONData/Ping", ReplyAction="http://tempuri.org/IDataWriterSoapSvcOf_JSONData/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataWriterSoapSvcOf_JSONData/WriteData", ReplyAction="http://tempuri.org/IDataWriterSoapSvcOf_JSONData/WriteDataResponse")]
        bool WriteData(DataWriterTestDriver.DataWriterSoapSvc_JSON.JSONData value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataWriterSoapSvcOf_JSONData/WriteData", ReplyAction="http://tempuri.org/IDataWriterSoapSvcOf_JSONData/WriteDataResponse")]
        System.Threading.Tasks.Task<bool> WriteDataAsync(DataWriterTestDriver.DataWriterSoapSvc_JSON.JSONData value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataWriterJSONSoapSvcChannel : DataWriterTestDriver.DataWriterSoapSvc_JSON.IDataWriterJSONSoapSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataWriterJSONSoapSvcClient : System.ServiceModel.ClientBase<DataWriterTestDriver.DataWriterSoapSvc_JSON.IDataWriterJSONSoapSvc>, DataWriterTestDriver.DataWriterSoapSvc_JSON.IDataWriterJSONSoapSvc {
        
        public DataWriterJSONSoapSvcClient() {
        }
        
        public DataWriterJSONSoapSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataWriterJSONSoapSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataWriterJSONSoapSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataWriterJSONSoapSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public bool WriteData(DataWriterTestDriver.DataWriterSoapSvc_JSON.JSONData value) {
            return base.Channel.WriteData(value);
        }
        
        public System.Threading.Tasks.Task<bool> WriteDataAsync(DataWriterTestDriver.DataWriterSoapSvc_JSON.JSONData value) {
            return base.Channel.WriteDataAsync(value);
        }
    }
}
